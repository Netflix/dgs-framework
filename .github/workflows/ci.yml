name: CI Check

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Java ${{ matrix.jdk-version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python modules
        run: |
          python -m pip install --upgrade pip
          if [ -f scripts/requirements.txt ]; then pip install -r scripts/requirements.txt; fi

      - uses: actions/cache@v2
        id: gradle-wrapper-cache
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlewrapper-${{ hashFiles('gradle/wrapper/*') }}
          restore-keys: ${{ runner.os }}-gradlewrapper-

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and publish Locally
        run: |
          ./gradlew --info check publishToMavenLocal --warning-mode all

      # - name: Publish Test Report
      #   if: ${{ always() }}
      #   uses: scacap/action-surefire-report@v1
      #   with:
      #     report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Clone dgs-examples-java
        uses: actions/checkout@master
        with:
          repository: Netflix/dgs-examples-java
          path: build/examples/dgs-examples-java

      - name: Clone dgs-examples-kotlin
        uses: actions/checkout@master
        with:
          repository: Netflix/dgs-examples-kotlin
          path: build/examples/dgs-examples-kotlin

      - name: Build Examples
        run: |
          find /home/runner/.m2/repository/ -type f -name "*graphql-dgs-codegen-gradle*"
          ./scripts/test-examples.py -v -k --path=./build/examples

      # - name: Publish Examples Test Report
      #   if: ${{ always() }}
      #   uses: scacap/action-surefire-report@v1
      #   with:
      #     check_name: Examples Test Reports
      #     report_paths: 'build/examples/**/build/test-results/test/TEST-*.xml'

